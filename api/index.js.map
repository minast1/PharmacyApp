{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/src/createEmotionCache.ts", "../app/src/theme.ts", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/root.tsx", "../app/src/ClientStyleContext.tsx", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash.tsx", "../app/components/Dashboard.tsx", "../app/components/AccountMenu.tsx", "../app/lib/auth.server.ts", "../app/lib/session.server.ts", "../app/controllers/userController.ts", "../app/lib/db.server.ts", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash/products.tsx", "../app/components/DrugsTable.tsx", "../app/controllers/drugsController.ts", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash/$drugId.tsx", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash/create.tsx", "../app/components/FormInputText.tsx", "../app/components/FormInputDate.tsx", "../app/components/FormInputNumber.tsx", "../app/components/SubmitButton.tsx", "../app/lib/validatorSchema.ts", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash/index.tsx", "../app/components/InfoCard.tsx", "../app/components/Title.tsx", "../app/components/Chart.tsx", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/dashboard.tsx", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/dashboard/invoice.tsx", "../app/controllers/transactionController.ts", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/dashboard/index.tsx", "../app/components/SaleComponent.tsx", "../app/components/ItemBox.tsx", "../app/lib/itemStore.ts", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/register.tsx", "../app/components/FormInputDropdown.tsx", "/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import * as React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport type { EntryContext } from \"@remix-run/node\";\nimport createEmotionCache from './src/createEmotionCache';\nimport theme from './src/theme';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CacheProvider } from '@emotion/react';\nimport createEmotionServer from '@emotion/server/create-instance';\nimport { RemixServer } from '@remix-run/react';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const MuiRemixServer = () => (\n    <CacheProvider value={cache}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <RemixServer context={remixContext} url={request.url} />\n      </ThemeProvider>\n    </CacheProvider>\n  );\n  \n  // Render the component to a string.\n  const html = renderToString(<MuiRemixServer />);\n\n  // Grab the CSS from emotion\n  const { styles } = extractCriticalToChunks(html);\n\n  let stylesHTML = '';\n\n  styles.forEach(({ key, ids, css }) => {\n    const emotionKey = `${key} ${ids.join(' ')}`;\n    const newStyleTag = `<style data-emotion=\"${emotionKey}\">${css}</style>`;\n    stylesHTML = `${stylesHTML}${newStyleTag}`;\n  });\n\n  // Add the emotion style tags after the insertion point meta tag\n  const markup = html.replace(\n    /<meta(\\s)*name=\"emotion-insertion-point\"(\\s)*content=\"emotion-insertion-point\"(\\s)*\\/>/,\n    `<meta name=\"emotion-insertion-point\" content=\"emotion-insertion-point\"/>${stylesHTML}`,\n  );\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import createCache from '@emotion/cache';\n\nexport default function createEmotionCache() {\n  return createCache({ key: 'css' });\n}\n", "import { createTheme } from '@mui/material/styles';\nimport { red } from '@mui/material/colors';\n\n// Create a theme instance.\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#d500f9',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;\n", "import * as React from \"react\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from \"@remix-run/react\";\nimport { withEmotionCache } from \"@emotion/react\";\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from \"@mui/material\";\nimport theme from \"./src/theme\";\nimport ClientStyleContext from \"./src/ClientStyleContext\";\n//import Layout from \"./src/Layout\";\nimport Container from \"@mui/material/Container\";\n\ninterface DocumentProps {\n  children: React.ReactNode;\n  title?: string;\n}\n\nconst Document = withEmotionCache(\n  ({ children, title }: DocumentProps, emotionCache) => {\n    const clientStyleData = React.useContext(ClientStyleContext);\n\n    // Only executed on client\n    useEnhancedEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        // eslint-disable-next-line no-underscore-dangle\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData.reset();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\n          {title ? <title>{title}</title> : null}\n          <Meta />\n          <Links />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n          />\n          <meta\n            name=\"emotion-insertion-point\"\n            content=\"emotion-insertion-point\"\n          />\n        </head>\n        <body\n          style={{\n            background: 'url(\"/background2.jpg\"), no-repeat',\n            backgroundPosition: \"left center\",\n          }}\n        >\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </body>\n      </html>\n    );\n  }\n);\n\n// https://remix.run/api/conventions#default-export\n// https://remix.run/api/conventions#route-filenames\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#errorboundary\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <Document title=\"Error!\">\n      <Container maxWidth=\"md\">\n        <div>\n          <h1>There was an error</h1>\n          <p>{error.message}</p>\n          <hr />\n          <p>\n            Hey, developer, you should replace this with what you want your\n            users to see.\n          </p>\n        </div>\n      </Container>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      );\n      break;\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Container maxWidth=\"md\">\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Container>\n    </Document>\n  );\n}\n", "import { createContext } from 'react';\n\nexport interface ClientStyleContextData {\n  reset: () => void;\n}\n\nexport default createContext<ClientStyleContextData>({\n  reset: () => {},\n});\n", "import { type ActionFunction, type LoaderFunction } from \"@remix-run/node\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport React from \"react\";\nimport Dashboard from \"~/components/Dashboard\";\n\nimport { authenticator } from \"~/lib/auth.server\";\n\nconst DashboardLayout = () => {\n  const data = useLoaderData();\n  return (\n    <Dashboard>\n      <Outlet context={data.user} />\n    </Dashboard>\n  );\n};\n\nexport default DashboardLayout;\n\nexport const action: ActionFunction = async ({ request }) => {\n  return await authenticator.logout(request, { redirectTo: \"/\" });\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // If the user is already authenticated redirect to /dashboard directly\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/\",\n  });\n\n  return { user: user };\n};\n", "import * as React from \"react\";\nimport { styled, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport MuiAppBar, {\n  type AppBarProps as MuiAppBarProps,\n} from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport MuiLink from \"@mui/material/Link\";\nimport Button from \"@mui/material/Button\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport theme from \"~/src/theme\";\nimport AccountMenu from \"./AccountMenu\";\nimport type { User } from \"@prisma/client\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\n\nfunction Copyright(props: any) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright \u00A9 \"}\n      <MuiLink color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </MuiLink>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n}));\n\ntype Props = {\n  children: React.ReactNode;\n};\ntype dataType = {\n  user: Omit<User, \"password\">;\n};\nconst Dashboard: React.FC<Props> = ({ children }) => {\n  const data = useLoaderData<dataType>();\n  //console.log(data.user.role);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              sx={{\n                marginRight: \"36px\",\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              {data.user.role === \"ADMIN\" ? \"Admin\" : \"Attendant\"} Dashboard\n            </Typography>\n            {data.user.role === \"ADMIN\" && (\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                size=\"small\"\n                component={Link}\n                to=\"/admindash/products\"\n              >\n                Manage Drugs\n              </Button>\n            )}\n\n            <AccountMenu />\n          </Toolbar>\n        </AppBar>\n\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: \"100vh\",\n            overflow: \"auto\",\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container>{children}</Grid>\n            <Copyright sx={{ pt: 4 }} />\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default Dashboard;\n", "import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Settings from \"@mui/icons-material/Settings\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { useFetcher } from \"@remix-run/react\";\n\nexport default function AccountMenu() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const fetcher = useFetcher();\n  return (\n    <React.Fragment>\n      <Box sx={{ display: \"flex\", alignItems: \"center\", textAlign: \"center\" }}>\n        <Tooltip title=\"LogOut\">\n          <IconButton\n            onClick={handleClick}\n            size=\"large\"\n            sx={{ ml: 2 }}\n            aria-controls={open ? \"account-menu\" : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? \"true\" : undefined}\n          >\n            <PersonIcon fontSize=\"large\" sx={{ color: \"white\" }} />\n          </IconButton>\n        </Tooltip>\n      </Box>\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: \"visible\",\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\n            mt: 1.5,\n            \"& .MuiAvatar-root\": {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            \"&:before\": {\n              content: '\"\"',\n              display: \"block\",\n              position: \"absolute\",\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: \"background.paper\",\n              transform: \"translateY(-50%) rotate(45deg)\",\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\n      >\n        <MenuItem>\n          <Avatar /> Profile\n        </MenuItem>\n        <Divider />\n\n        <MenuItem>\n          <ListItemIcon>\n            <Settings fontSize=\"small\" />\n          </ListItemIcon>\n          Settings\n        </MenuItem>\n        <MenuItem\n          onClick={() =>\n            fetcher.submit(\n              { button: \"signout\" },\n              { method: \"post\", action: `/dashboard` }\n            )\n          }\n        >\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          Logout\n        </MenuItem>\n      </Menu>\n    </React.Fragment>\n  );\n}\n", "import { Authenticator } from \"remix-auth\";\nimport { sessionStorage } from \"~/lib/session.server\";\nimport { FormStrategy } from \"remix-auth-form\";\nimport { loginUser, registerNewUser } from \"~/controllers/userController\";\nimport type { Role, User } from \"@prisma/client\";\n\n\nexport const  authenticator = new Authenticator<Omit<User , \"password\">>(sessionStorage,\n    { throwOnError: true });\n    \n\nauthenticator.use(\n    new FormStrategy(async ({ form }) => {   \n        let email = form.get(\"email\") as string;\n        let password = form.get(\"password\")as string;\n        let name = form.get(\"name\")as string;\n        let mobile = form.get(\"mobile\") as string\n        let role = form.get(\"role\") as Role\n        \n        const user = name ?\n            await registerNewUser({ email, password, name, mobile , role}) : \n            await loginUser({email, password})\n        return user\n    }),\n    \"user\"\n);\n\n\n\n\n\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\ninvariant(process.env.SESSION_SECRET, \"Session secret must be set\")\n\n// export the whole sessionStorage object\nexport let sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"_session\", // use any name you want here\n    sameSite: \"lax\", // this helps with CSRF\n    path: \"/\", // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: [process.env.SESSION_SECRET] , // replace this with an actual secre\n    secure: process.env.NODE_ENV === \"production\", // enable this in prod only\n    //maxAge: 5\n  },\n\n});\n \n// you can also export the methods individually for your own usage\nexport let { getSession, commitSession, destroySession } = sessionStorage;", "import type {  User } from '@prisma/client';\nimport bcrypt from 'bcrypt'\nimport { db } from '~/lib/db.server';\n//import { getSession } from '~/lib/session.server';\n\ntype Credentials = {\n    email: string\n    password: string\n}\n\n\nexport const loginUser = async (credentials: Credentials) => {\n    \n    const user = await db.user.findFirst({\n        where: { email: credentials.email }\n    });\n\n    if (!user) {\n        throw new Error(\"Invalid Credentials\")\n    }\n    const crosscheckPassword = await bcrypt.compareSync(credentials.password, user.password);\n\n    if (crosscheckPassword) {\n        const { password, ...rest } = user;\n        return rest\n    } else {\n        throw new Error(\"Password is Invalid\")\n    }\n};\n\nconst getUserWithEmail =async (email:string) => {\n     const user = await db.user.findFirst({\n        where: { email: email }\n     });\n    return user\n}\n\ntype UserFormData =  Omit<User, \"id\">\nexport const registerNewUser =async (formData: UserFormData) => {\n       const emailExists = await getUserWithEmail(formData.email)\n    if (emailExists) {\n        throw new Error(\"This email already exists\")\n    }\n    const saltRounds = 10;\n    const salt = await bcrypt.genSalt(saltRounds);\n    const hash = bcrypt.hashSync(formData.password, salt);\n    const newUser  = await db.user.create({\n        data: {\n            name: formData.name,\n            email: formData.email,\n            mobile: formData.mobile,\n            role: formData.role, \n            password: hash,\n           \n\n        }, \n        select: {\n            id: true,\n            email: true,\n            name: true,\n            mobile: true ,\n            role:true \n        }\n    });\n    \n    return newUser\n}\n\ntype updateType = {\n    Id: string\n    name: string\n    email: string,\n    mobile: string \n}\nexport const updateUser = async (formData: updateType) => {\n    const { Id, name, email, mobile } = formData; \n    const user = await db.user.update({\n        where: {\n            id: Id\n        },\n        data: {\n            email: email,\n            name: name,\n            mobile: mobile\n        }\n    });\n    return user;\n}\n\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n  db.$connect();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n    global.__db.$connect();\n  }\n  db = global.__db;\n}\n\nexport { db };", "import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport DrugsTable from \"~/components/DrugsTable\";\nimport { Link } from \"@remix-run/react\";\nimport Box from \"@mui/material/Box\";\nimport { deleteDrug, getAllDrugs } from \"~/controllers/drugsController\";\n\nconst AdminProductsPage = () => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Card sx={{ mb: 10, mt: 3 }} elevation={5}>\n          <Box display=\"flex\" alignItems=\"center\" p={1}>\n            <Typography variant=\"h6\">Products Information Table</Typography>\n            <Box flexGrow={1} />\n            <Link\n              to=\"/admindash/create\"\n              //prefetch=\"intent\"\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: 10,\n                textDecoration: \"none\",\n              }}\n            >\n              <Button\n                //href=\"/dashboard/create\"\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ textTransform: \"capitalize\", mr: 2 }}\n              >\n                Add New Drug\n              </Button>\n            </Link>\n          </Box>\n\n          <CardContent sx={{ borderTop: \"1px solid lightgray\" }}>\n            <DrugsTable />\n          </CardContent>\n          <CardActions disableSpacing></CardActions>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AdminProductsPage;\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  //get all drugs to load here\n  return await getAllDrugs();\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const Id = formData.get(\"button\") as string;\n\n  return await deleteDrug(Id);\n};\n", "import * as React from \"react\";\nimport {\n  DataGrid,\n  type GridColDef,\n  type GridValueGetterParams,\n} from \"@mui/x-data-grid\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport TextField from \"@mui/material/TextField\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Button from \"@mui/material/Button\";\nimport {\n  Link,\n  useFetcher,\n  useLoaderData,\n  useOutletContext,\n} from \"@remix-run/react\";\nimport { format } from \"date-fns\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport type { Product, User } from \"@prisma/client\";\nimport type { loaderItemsType } from \"~/routes/dashboard/\";\n\nfunction escapeRegExp(value: string): string {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\ninterface QuickSearchToolbarProps {\n  clearSearch: () => void;\n  onChange: () => void;\n  value: string;\n}\n\nfunction QuickSearchToolbar(props: QuickSearchToolbarProps) {\n  return (\n    <Box\n      sx={{\n        p: 0.5,\n        pb: 0,\n      }}\n    >\n      <TextField\n        variant=\"standard\"\n        value={props.value}\n        onChange={props.onChange}\n        placeholder=\"Search Drug\u2026\"\n        InputProps={{\n          startAdornment: <SearchIcon fontSize=\"small\" />,\n          endAdornment: (\n            <IconButton\n              title=\"Clear\"\n              aria-label=\"Clear\"\n              size=\"small\"\n              style={{ visibility: props.value ? \"visible\" : \"hidden\" }}\n              onClick={props.clearSearch}\n            >\n              <ClearIcon fontSize=\"small\" />\n            </IconButton>\n          ),\n        }}\n        sx={{\n          width: {\n            xs: 1,\n            sm: \"auto\",\n          },\n          m: (theme) => theme.spacing(1, 0.5, 1.5),\n          \"& .MuiSvgIcon-root\": {\n            mr: 0.5,\n          },\n          \"& .MuiInput-underline:before\": {\n            borderBottom: 1,\n            borderColor: \"divider\",\n          },\n        }}\n      />\n    </Box>\n  );\n}\n\ntype prodType = Omit<Product, \"price\">;\nconst DrugsTable = () => {\n  const data = useLoaderData<loaderItemsType>();\n  const parentData = data.all;\n  const user = useOutletContext<User>();\n  //console.log(user.role);\n  const fetcher = useFetcher();\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [rows, setRows] = React.useState<prodType[] | []>([]);\n\n  const requestSearch = (searchValue: string) => {\n    setSearchText(searchValue);\n    const searchRegex = new RegExp(escapeRegExp(searchValue), \"i\");\n    const filteredRows = parentData\n      ? parentData.filter((row: any) => {\n          return Object.keys(row).some((field: any) => {\n            return searchRegex.test(row[field].toString());\n          });\n        })\n      : [];\n    setRows(filteredRows);\n  };\n\n  React.useEffect(() => {\n    setRows(parentData);\n  }, [parentData]);\n\n  const columns: GridColDef[] = [\n    {\n      field: \"name\",\n      headerName: \"DrugName\",\n      width: 150,\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n    {\n      field: \"quantity\",\n      headerName: \"Quantity\",\n      width: 100,\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n    {\n      field: \"batch_no\",\n      headerName: \"Batch Number\",\n      width: 150,\n      align: \"center\",\n      headerAlign: \"center\",\n      hide: user.role === \"ATTENDANT\" && true,\n    },\n    {\n      field: \"price\",\n      headerName: \"Price GH\u20B5\",\n      align: \"center\",\n      type: \"string\",\n      headerAlign: \"center\",\n      width: 160,\n      hide: user.role === \"ADMIN\" && true,\n    },\n    {\n      field: \"production_date\",\n      headerName: \"Prod. Date\",\n      align: \"center\",\n      headerAlign: \"center\",\n      width: 150,\n      valueFormatter: (params) => {\n        //console.log(params.value);\n        return format(new Date(params.value), \"PP\");\n      },\n    },\n    {\n      field: \"expiry_date\",\n      align: \"center\",\n      headerAlign: \"center\",\n      headerName: \"Exp. Date\",\n      valueFormatter: (params) => {\n        //console.log(params.value);\n        return format(new Date(params.value), \"PP\");\n      },\n      width: 150,\n    },\n    {\n      field: \"manufacturer\",\n      headerName: \"Manufacturer\",\n      align: \"center\",\n      headerAlign: \"center\",\n      width: 200,\n    },\n\n    {\n      field: \"actions\",\n      headerName: \"Actions Area\",\n      minWidth: 100,\n      flex: 1,\n      hide: user.role === \"ATTENDANT\" && true,\n      align: \"right\",\n      headerAlign: \"right\",\n      renderCell: (params: GridValueGetterParams) => {\n        return (\n          <Box display=\"flex\">\n            <Button\n              variant=\"contained\"\n              component={Link}\n              to={`/admindash/${params.id}`}\n              prefetch=\"intent\"\n              size=\"small\"\n              sx={{ mr: 3, textTransform: \"capitalize\" }}\n            >\n              View\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              id={params.id as string}\n              color=\"error\"\n              sx={{ textTransform: \"capitalize\" }}\n              onClick={() => {\n                fetcher.submit(\n                  {\n                    button: params.id as string,\n                  },\n                  { method: \"post\" }\n                );\n              }}\n            >\n              {fetcher.state === \"loading\" && params.hasFocus ? (\n                <CircularProgress color=\"inherit\" size={20} />\n              ) : (\n                \"Delete\"\n              )}\n            </Button>\n          </Box>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div style={{ height: 700, width: \"100%\" }}>\n      <DataGrid\n        components={{ Toolbar: QuickSearchToolbar }}\n        rows={rows}\n        disableColumnFilter\n        pageSize={10}\n        disableColumnMenu\n        disableColumnSelector\n        disableSelectionOnClick\n        loading={rows.length === 0}\n        columns={columns}\n        componentsProps={{\n          toolbar: {\n            value: searchText,\n            onChange: (event: React.ChangeEvent<HTMLInputElement>) =>\n              requestSearch(event.target.value),\n            clearSearch: () => requestSearch(\"\"),\n          },\n        }}\n      />\n    </div>\n  );\n};\nexport default DrugsTable;\n", "import { db } from '~/lib/db.server';\nimport type { Product } from '@prisma/client';\nimport { addMonths, subMonths } from 'date-fns';\n\n\nexport const getAllDrugs = async () => {\n    const data = await db.product.findMany({\n        orderBy: { id: 'desc' }\n        \n    });\n    \n    return data;\n};\n\ntype createData = Omit<Product, \"id\"|\"transactions\">\nexport const addNewDrug = async (formData: createData) => {\n    const data = await db.product.create({\n        data: formData\n    });\n    return data; \n}\n\nexport const deleteDrug = async (Id: string) => {\n    const data = await db.product.delete({\n        where: { id: Id }\n    });\n    return data; \n}\n\nexport const findDrugById = async (Id: string) => {\n    const data = await db.product.findFirst({\n        where: { id: Id }\n    });\n    return data;\n}\n\nexport const almostFinished =async () => {\n    const data = await db.product.findMany({\n        where: {\n            quantity: {\n                lte: 10\n            }\n        }\n    });\n    return data;\n}\n\nexport const outOfStock = async () => {\n    const data = await db.product.findMany({\n        where: {\n            quantity: {\n                equals: 0\n            }\n        }\n    });\n    return data; \n}\n\nexport const expiring = async () => {\n    const threeMonthsFromNow = subMonths(new Date(), 3);\n    console.log(threeMonthsFromNow)\n    const data = await db.product.findMany({\n        where: {\n            expiry_date: {\n                gte:threeMonthsFromNow,\n                lte: addMonths(new Date(), 3)\n                \n            },\n        \n        }\n    });\n\n    return data;\n}", "import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { findDrugById } from \"~/controllers/drugsController\";\nimport Box from \"@mui/material/Box\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport type { Product } from \"@prisma/client\";\nimport { format } from \"date-fns\";\n\nconst DrugDetailsPage = () => {\n  const data = useLoaderData<Product>();\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Card sx={{ mb: 10, mt: 3 }} elevation={5}>\n          <Box display=\"flex\" alignItems=\"center\" p={1}>\n            <Box flexGrow={1} />\n            <Link\n              to=\"/admindash/products\"\n              //prefetch=\"intent\"\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: 10,\n                textDecoration: \"none\",\n              }}\n            >\n              <Button\n                //href=\"/dashboard/create\"\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ textTransform: \"capitalize\", mr: 2 }}\n              >\n                Products\n              </Button>\n            </Link>\n          </Box>\n\n          <CardContent sx={{ borderTop: \"1px solid lightgray\" }}>\n            <Grid container spacing={4}>\n              <Grid item xs={12} sm={12} md={6}>\n                <img alt=\"\" height={600} width={400} src=\"/bottle2.jpg\" />\n              </Grid>\n              <Grid item xs={12} sm={12} md={6}>\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  //justifyContent=\"center\"\n                  mt={3}\n                >\n                  <Box\n                    component={Typography}\n                    gutterBottom\n                    sx={{\n                      flexGrow: 1,\n                      fontSize: 23,\n                      mb: 2,\n                      backgroundColor: \"#bbdefb\",\n                      pl: 1,\n                    }}\n                  >\n                    {\" \"}\n                    Drug Description : {data.name}\n                  </Box>\n                  <Box\n                    component={Typography}\n                    sx={{\n                      flexGrow: 1,\n                      fontSize: 23,\n                      mb: 2,\n                      backgroundColor: \"#bbdefb\",\n                      pl: 1,\n                    }}\n                  >\n                    {\" \"}\n                    Manufacturer Name : {data.manufacturer}\n                  </Box>\n                  <Box\n                    component={Typography}\n                    sx={{\n                      flexGrow: 1,\n                      fontSize: 23,\n                      mb: 2,\n                      backgroundColor: \"#bbdefb\",\n                      pl: 1,\n                    }}\n                  >\n                    {\" \"}\n                    Batch Number : {data.batch_no}\n                  </Box>\n                  <Box\n                    component={Typography}\n                    sx={{\n                      flexGrow: 1,\n                      fontSize: 23,\n                      mb: 2,\n                      backgroundColor: \"#bbdefb\",\n                      pl: 1,\n                    }}\n                  >\n                    {\" \"}\n                    Production Date :{\" \"}\n                    {format(new Date(data.production_date), \"PP\")}\n                  </Box>\n                  <Box\n                    component={Typography}\n                    sx={{\n                      flexGrow: 1,\n                      fontSize: 23,\n                      mb: 2,\n                      backgroundColor: \"#bbdefb\",\n                      pl: 1,\n                    }}\n                  >\n                    {\" \"}\n                    Expiry Date : {format(new Date(data.expiry_date), \"PP\")}\n                  </Box>\n                  <Box\n                    component={Typography}\n                    gutterBottom\n                    sx={{\n                      flexGrow: 1,\n                      fontSize: 23,\n                      mb: 2,\n                      backgroundColor: \"#bbdefb\",\n                      pl: 1,\n                    }}\n                  >\n                    {\" \"}\n                    Price : {data.price} GH\u20B5\n                  </Box>\n                  <Box\n                    component={Typography}\n                    sx={{\n                      flexGrow: 1,\n                      fontSize: 23,\n                      mb: 3,\n                      backgroundColor: \"#bbdefb\",\n                      pl: 1,\n                    }}\n                  >\n                    {\" \"}\n                    Quantity : {data.quantity}\n                  </Box>\n                  <Box display=\"flex\">\n                    <img alt=\"\" height={200} width={200} src=\"/fda2.jpg\" />\n                    <img alt=\"\" height={200} width={200} src=\"/signed.jpg\" />\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </CardContent>\n          <CardActions disableSpacing></CardActions>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DrugDetailsPage;\n\nexport let loader: LoaderFunction = async ({ params }) => {\n  const id = params.drugId as string;\n\n  return await findDrugById(id);\n};\n", "import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link, useActionData } from \"@remix-run/react\";\nimport Box from \"@mui/material/Box\";\nimport { FormInputText } from \"~/components/FormInputText\";\nimport { ValidatedForm } from \"remix-validated-form\";\nimport { FormInputDate } from \"~/components/FormInputDate\";\nimport { FormInputNumber } from \"~/components/FormInputNumber\";\nimport SubmitButton from \"~/components/SubmitButton\";\nimport { drugValidator } from \"~/lib/validatorSchema\";\nimport type { ActionFunction } from \"@remix-run/node\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { addNewDrug } from \"~/controllers/drugsController\";\n\nconst CreateDrugPage = () => {\n  const submitted = useActionData();\n  React.useEffect(() => {\n    submitted &&\n      !submitted?.fieldErrors &&\n      toast.success(\n        \"Drug Details Submitted Successfully\",\n\n        {\n          position: \"bottom-right\",\n          duration: 3000,\n          style: { backgroundColor: \"#81c784\", color: \"white\" },\n        }\n      );\n  }, [submitted]);\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Card sx={{ mb: 10, mt: 3 }} elevation={5}>\n          <Box display=\"flex\" alignItems=\"center\" p={1}>\n            <Typography variant=\"h6\">Add New Drug</Typography>\n            <Box flexGrow={1} />\n            <Link\n              to=\"/admindash/products\"\n              //prefetch=\"intent\"\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: 10,\n                textDecoration: \"none\",\n              }}\n            >\n              <Button\n                //href=\"/dashboard/create\"\n                variant=\"contained\"\n                size=\"small\"\n                sx={{ textTransform: \"capitalize\", mr: 2 }}\n              >\n                Products\n              </Button>\n            </Link>\n          </Box>\n\n          <CardContent sx={{ borderTop: \"1px solid lightgray\" }}>\n            <Box\n              component={ValidatedForm}\n              validator={drugValidator}\n              resetAfterSubmit\n              id=\"drug\"\n              method=\"post\"\n              sx={{ mt: 1 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <FormInputText name=\"name\" label=\"Drug Name\" />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormInputText name=\"manufacturer\" label=\"Manufacturer\" />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormInputDate\n                    name=\"production_date\"\n                    label=\"Production Date\"\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormInputDate name=\"expiry_date\" label=\"Expiry Date\" />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormInputNumber name=\"price\" label=\"Price\" />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormInputNumber name=\"quantity\" label=\"Quantity\" />\n                </Grid>\n                <Grid item xs={9}>\n                  <FormInputText name=\"batch_no\" label=\"Batch Number\" />\n                </Grid>\n              </Grid>\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                <SubmitButton\n                  title=\"Submit\"\n                  formId=\"drug\"\n                  styles={{ width: \"50%\" }}\n                />\n              </Box>\n            </Box>\n          </CardContent>\n          <CardActions disableSpacing></CardActions>\n        </Card>\n      </Grid>\n      <Toaster />\n    </Grid>\n  );\n};\n\nexport default CreateDrugPage;\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const name = formData.get(\"name\") as string;\n  const manufacturer = formData.get(\"manufacturer\") as string;\n  const batch_no = formData.get(\"batch_no\") as string;\n  const expiry_date = new Date(formData.get(\"expiry_date\") as string);\n  const production_date = new Date(formData.get(\"production_date\") as string);\n  const quantity = parseInt(formData.get(\"quantity\") as string);\n  const price = formData.get(\"price\") as string;\n\n  return await addNewDrug({\n    quantity,\n    name,\n    manufacturer,\n    batch_no,\n    expiry_date,\n    production_date,\n    price,\n  });\n};\n", "import React from \"react\";\nimport TextField, { type TextFieldProps } from \"@mui/material/TextField\";\nimport { useField } from \"remix-validated-form\";\n\nexport const FormInputText = ({ name, ...props }: TextFieldProps) => {\n  const { error, getInputProps, defaultValue } = useField(name as string);\n\n  return (\n    <TextField\n      {...props}\n      helperText={error ? <span style={{ color: \"red\" }}>{error}</span> : null}\n      error={error ? true : false}\n      key={defaultValue}\n      size=\"small\"\n      {...getInputProps({ id: name })}\n      fullWidth\n      variant=\"outlined\"\n    />\n  );\n};\n", "import React from \"react\";\nimport DateAdapter from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport TextField, { type TextFieldProps } from \"@mui/material/TextField\";\nimport { useField } from \"remix-validated-form\";\n\nexport const FormInputDate = ({ name, label, ...props }: TextFieldProps) => {\n  const [value, setValue] = React.useState<Date | null>(new Date());\n  const { error, getInputProps } = useField(name as string);\n  const handleChange = (newValue: Date | null) => {\n    setValue(newValue);\n  };\n  return (\n    <LocalizationProvider dateAdapter={DateAdapter}>\n      <DatePicker\n        label={label}\n        inputFormat=\"MM/dd/yyyy\"\n        value={value}\n        onChange={handleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            {...props}\n            helperText={\n              error ? <span style={{ color: \"red\" }}>{error}</span> : null\n            }\n            error={error ? true : false}\n            size=\"small\"\n            {...getInputProps({ id: name })}\n          />\n        )}\n      />\n    </LocalizationProvider>\n  );\n};\n", "import React from \"react\";\nimport TextField, { type TextFieldProps } from \"@mui/material/TextField\";\nimport { useField } from \"remix-validated-form\";\n\nexport const FormInputNumber = ({ name, ...props }: TextFieldProps) => {\n  const { error, getInputProps } = useField(name as string);\n\n  return (\n    <TextField\n      {...props}\n      helperText={error ? <span style={{ color: \"red\" }}>{error}</span> : null}\n      error={error ? true : false}\n      size=\"small\"\n      //placeholder=\"should be between 100 - 999\"\n      type=\"number\"\n      {...getInputProps({\n        id: name,\n      })}\n      inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n      fullWidth\n      variant=\"outlined\"\n    />\n  );\n};\n", "import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Button from \"@mui/material/Button\";\nimport { useIsSubmitting } from \"remix-validated-form\";\nimport theme from \"~/src/theme\";\n//import { useMediaQuery, useTheme } from \"@mui/material\";\n\ntype AppProps = {\n  formId: string;\n  title: string;\n  styles?: {};\n  value?: string;\n};\n\nconst SubmitButton = ({ formId, title, styles, value }: AppProps) => {\n  const isSubmitting = useIsSubmitting(formId);\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      name=\"button\"\n      size=\"small\"\n      value={value}\n      variant=\"contained\"\n      color=\"primary\"\n      sx={{\n        ...styles,\n        margin: theme.spacing(3, 0, 2),\n      }}\n    >\n      {isSubmitting ? <CircularProgress color=\"inherit\" size={20} /> : title}\n    </Button>\n  );\n};\n\nexport default SubmitButton;\n", "import { z } from 'zod';\nimport { withZod } from \"@remix-validated-form/with-zod\";\n\n\nexport const loginValidator = withZod(\n  z.object({\n    email: z.string().nonempty(\"* This field is required\").email({ message: \"Please enter a valid email address\" }),\n    password: z.string().nonempty(\" * This field is required\")\n  })\n)\n\nconst roles= [\"ADMIN\", \"ATTENDANT\"] as const; \nexport const registerValidatior = withZod(\n  z.object({\n    name: z.string().nonempty(\"* This field is required\"),\n    email: z.string().nonempty(\"* This field is required\").email({ message: \"Please enter a valid email address\" }),\n    password: z.string().nonempty(\" * This field is required\"),\n    confirm: z.string().nonempty(\"Please confirm the password\"),\n    role: z.enum(roles),\n     mobile: z.string().nonempty(\"* This field is required\")\n  }).refine((data) => data.password === data.confirm, {\n    message: \"Passwords don't match\", \n    path: [\"confirm\"]\n  })\n  \n)\n\nexport const drugValidator = withZod(\n  z.object({\n    name: z.string().nonempty(\"* This field is required\"),\n    manufacturer: z.string().nonempty(\"* This field is required\"),\n    batch_no: z.string().nonempty(\"* This field is required\"),\n    price: z.string().nonempty(\"* This field is required\"),\n       quantity: z.string({required_error: \"* This field is required\"}).refine((val) => !Number.isNaN(parseInt(val, 10)), {\n    //message: \"Expected number, received a string\"\n  })\n  })\n)\n\nexport const profileValidator = withZod(\n  z.object({\n     name: z.string().nonempty(\"* This field is required\"),\n    email: z.string().nonempty(\"* This field is required\").email({ message: \"Please enter a valid email address\" }),\n     mobile: z.string().nonempty(\"* This field is required\")\n  })\n)\n const courts = [\"HIGH_COURT\", \"SUPREME_COURT\", \"NOTASSIGNED\"] as const\nexport const criminalValidator = withZod(\n  z.object({\n    name: z.string().nonempty(\"* Criminal Name is required\"),\n    email: z.string().nonempty(\"* Criminal Email is required\").email({ message: \"Please enter a valid email address\" }),\n    phone: z.string().nonempty(\"* Criminal PhoneNumber is required\"),\n    weight: z.string().nonempty(\"* Criminal Weight is required\"),\n    height: z.string().nonempty(\"* Criminal Height is required\"),\n    policeId: z.string().min(1, \"* Please assign a person to the case\"),\n    crimes: z.union([z.array(z.string()).nonempty(), z.string().nonempty(' * Please select at least one crime')]), //z.string().min(1, ),\n    dob: z.string().optional(),\n    statement: z.string().optional(),\n    court: z.enum(courts)\n     \n  }));\n\n  export const sessions = [\"MORNING\", \"AFTERNOON\", \"EVENING\"] as const;\nexport const bookingValidator = withZod(\n  z.object({\n    session: z.enum(sessions),\n    start_city: z.string({ required_error: '* This field is required' }).nonempty('* This field is required' ),\n    destination: z.string({ required_error: '* This field is required' }).nonempty('* This field is required' )\n    })\n  )\n \n", "import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InfoCard from \"~/components/InfoCard\";\nimport Paper from \"@mui/material/Paper\";\nimport Chart from \"../../components/Chart\";\n\nconst AdminIndexPage = () => {\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={4}>\n        <InfoCard title=\"Expiry Date Notifications\" items={[]} />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <InfoCard title=\"Out of Stock Notifications\" items={[]} />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <InfoCard title=\"Almost Finished Notifications\" items={[]} />\n      </Grid>\n      <Grid item xs={12}>\n        <Paper\n          sx={{\n            p: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: 370,\n          }}\n          elevation={5}\n        >\n          <Chart />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AdminIndexPage;\n", "import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Title from \"./Title\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"@remix-run/react\";\nimport type { Product } from \"@prisma/client\";\nimport Stack from \"@mui/material/Stack\";\nimport Divider from \"@mui/material/Divider\";\n\ntype appProps = {\n  title: string;\n  items: Product[] | [];\n};\n\nexport default function InfoCard({ title, items }: appProps) {\n  return (\n    <Paper\n      elevation={5}\n      sx={{\n        p: 2,\n        height: 220,\n        backgroundColor: title.includes(\"Expiry\")\n          ? \"#FFE53B\"\n          : title.includes(\"Stock\")\n          ? \"#00DBDE\"\n          : \"#FF3CAC\",\n        backgroundImage: title.includes(\"Expiry\")\n          ? \"linear-gradient(147deg, #FFE53B 0%, #FF2525 74%)\"\n          : title.includes(\"Stock\")\n          ? \"linear-gradient(90deg, #00DBDE 0%, #FC00FF 100%)\"\n          : \"linear-gradient(225deg, #FF3CAC 0%, #784BA0 50%, #2B86C5 100%)\",\n      }}\n    >\n      <Title>{title}</Title>\n      <Divider sx={{ backgroundColor: \"black\", my: 1 }} />\n      {items.length ? (\n        <Stack spacing={1}>\n          {items.map((el: Product) => (\n            <Box key={el.id}>\n              <Typography sx={{ flex: 1, color: \"black\", fontWeight: \"bold\" }}>\n                Name: {el.name}\n              </Typography>\n              <Typography\n                color=\"text.secondary\"\n                sx={{ flex: 1, color: \"black\", fontWeight: \"bold\" }}\n              >\n                Batch Id: {el.batch_no}\n              </Typography>\n            </Box>\n          ))}\n        </Stack>\n      ) : (\n        <Box>\n          <img alt=\"\" src=\"not_found.png\" width={80} height={70} />\n          <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\n            No Items To Display\n          </Typography>\n        </Box>\n      )}\n      {items.length ? (\n        <div style={{ marginTop: 1 }}>\n          <Button\n            component={Link}\n            variant=\"contained\"\n            size=\"small\"\n            fullWidth\n            to=\"#\"\n          >\n            View Full Details\n          </Button>\n        </div>\n      ) : null}\n    </Paper>\n  );\n}\n", "import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface TitleProps {\n  children?: React.ReactNode;\n}\n\nexport default function Title(props: TitleProps) {\n  return (\n    <Typography\n      component=\"h2\"\n      variant=\"h6\"\n      sx={{ color: \"black\" }}\n      gutterBottom\n    >\n      {props.children}\n    </Typography>\n  );\n}\n", "import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from \"recharts\";\nimport Title from \"./Title\";\n\n// Generate Sales Data\nfunction createData(time: string, amount?: number) {\n  return { time, amount };\n}\n\nconst data = [\n  createData(\"00:00\", 0),\n  createData(\"03:00\", 300),\n  createData(\"06:00\", 600),\n  createData(\"09:00\", 800),\n  createData(\"12:00\", 1500),\n  createData(\"15:00\", 2000),\n  createData(\"18:00\", 2400),\n  createData(\"21:00\", 2400),\n  createData(\"24:00\", undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Daily Sales Projections</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 20,\n            left: 24,\n          }}\n        >\n          <XAxis\n            dataKey=\"time\"\n            stroke={theme.palette.text.secondary}\n            style={theme.typography.body2}\n          >\n            <Label\n              angle={360}\n              position=\"bottom\"\n              style={{\n                textAnchor: \"middle\",\n                fill: theme.palette.text.primary,\n                ...theme.typography.body1,\n              }}\n            >\n              Time (hr)\n            </Label>\n          </XAxis>\n          <YAxis\n            stroke={theme.palette.text.secondary}\n            style={theme.typography.body2}\n          >\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{\n                textAnchor: \"middle\",\n                fill: theme.palette.text.primary,\n                ...theme.typography.body1,\n              }}\n            >\n              Sales (GH\u20B5)\n            </Label>\n          </YAxis>\n          <Line\n            isAnimationActive={false}\n            type=\"monotone\"\n            dataKey=\"amount\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n", "import { type ActionFunction, type LoaderFunction } from \"@remix-run/node\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport React from \"react\";\nimport Dashboard from \"~/components/Dashboard\";\n\nimport { authenticator } from \"~/lib/auth.server\";\n\nconst DashboardLayout = () => {\n  const data = useLoaderData();\n  return (\n    <Dashboard>\n      <Outlet context={data.user} />\n    </Dashboard>\n  );\n};\n\nexport default DashboardLayout;\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const button = formData.get(\"button\");\n  switch (button) {\n    case \"signout\":\n      return await authenticator.logout(request, { redirectTo: \"/\" });\n\n    default:\n      return null;\n  }\n\n  //return null;\n  //;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // If the user is already authenticated redirect to /dashboard directly\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/\",\n  });\n\n  return { user: user };\n};\n", "import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport List from \"@mui/material/List\";\n//import Grid from \"@mui/material/Grid\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport {\n  getLatestTransactionDetails,\n  type transactionType,\n} from \"~/controllers/transactionController\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { format } from \"date-fns\";\nimport IconButton from \"@mui/material/IconButton\";\nimport PrintIcon from \"@mui/icons-material/Print\";\n\nconst InvoicePage = () => {\n  const data = useLoaderData<transactionType>();\n\n  //let time = date.set\n  //console.log(time);\n  return (\n    <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 3 }}>\n      <Paper\n        variant=\"outlined\"\n        // elevation={1}\n        sx={{\n          my: { xs: 3, md: 6 },\n          p: { xs: 2, md: 3 },\n          backgroundColor: \"white\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\" align=\"left\">\n          Menzbek Pharmacy Ltd.\n        </Typography>\n\n        <Typography variant=\"subtitle1\" gutterBottom sx={{ fontSize: 15 }}>\n          {format(new Date(), \"dd-MM-yyyy \")} {format(new Date(), \"H:m aa\")}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"space-around\" alignItems=\"center\">\n          <Typography variant=\"subtitle2\">REG#90</Typography>\n          <Typography variant=\"subtitle2\">TRAN#5176</Typography>\n          <Typography variant=\"subtitle2\">CSHR#1052820</Typography>\n          <Typography variant=\"subtitle2\">STR#6196</Typography>\n        </Box>\n\n        <List disablePadding>\n          {data.map((item) => (\n            <ListItem key={item.id} sx={{ py: 1, px: 0 }}>\n              <ListItemText\n                primary={`${item.quantity}  ${item?.product?.name}`}\n              />\n              <Typography variant=\"body2\">{item.total}Gh\u20B5</Typography>\n            </ListItem>\n          ))}\n          <ListItem sx={{ py: 1, px: 0 }}>\n            <ListItemText primary=\"Sub Total\" />\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n              $34.06\n            </Typography>\n          </ListItem>\n          <ListItem sx={{ py: 1, px: 0 }}>\n            <ListItemText primary=\"Sales Tax\" />\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n              $34.06\n            </Typography>\n          </ListItem>\n          <ListItem sx={{ py: 1, px: 0 }}>\n            <ListItemText primary=\"Total Charge\" />\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n              $34.06\n            </Typography>\n          </ListItem>\n          <ListItem sx={{ py: 1, px: 0 }}>\n            <img alt=\"\" height={120} width={300} src=\"/barcode.jpg\" />\n          </ListItem>\n        </List>\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          <Button\n            aria-label=\"print\"\n            size=\"small\"\n            variant=\"contained\"\n            color=\"success\"\n            sx={{ mt: 3 }}\n          >\n            <PrintIcon />\n          </Button>\n          <Box sx={{ flexGrow: 1 }} />\n          <Button\n            component={Link}\n            to=\"/dashboard/\"\n            prefetch=\"intent\"\n            variant=\"contained\"\n            size=\"small\"\n            sx={{ mt: 3 }}\n          >\n            Back\n          </Button>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default InvoicePage;\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  //get the recent transaction here\n  return await getLatestTransactionDetails();\n  //return await getAllDrugs();\n};\n", "import { Prisma } from \"@prisma/client\"\nimport { db } from \"~/lib/db.server\"\n\n\n\ntype saleInfoType =  {\n    productId: string\n    quantity: number\n    price: string \n}\n\nexport const createTransaction = async (params: saleInfoType[]) => {\n    \n    const convertTotalToDecimal = (quantity: number , price:string):number => { return ((quantity * parseInt(price)))}\n    const saleInfo = params.map(({ productId, quantity, price }) => ({ productId: productId, quantity: quantity, total:convertTotalToDecimal(quantity, price)  }));\n   const data =  await db.transaction.create({\n        data: {\n            products: {\n               create: saleInfo\n            }\n        }\n   });\n    \n    //update the quantities of the products \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const decreaseSaleProductQuantities = await Promise.all(params.map(async (el) => {\n        return await db.product.update({\n            where: { id: el.productId },\n            data: {\n                quantity: {\n                    decrement: el.quantity\n                }\n            }\n        });\n        })\n    )\n        \n       \n    return data;\n}\n\n \nexport type transactionType = Prisma.PromiseReturnType<typeof getLatestTransactionDetails>\nexport const getLatestTransactionDetails = async () => {\n \n     const trans =  await db.transaction.findMany({\n        orderBy: { id: 'desc' },\n        take: 1\n     });\n    \n    const transId = trans[0].id\n    \n    \n    const data = await db.productTransactions.findMany({\n        where: {\n            transactionId :  transId\n        },\n        include: {\n            product : true\n        }\n    \n    })\n    return data \n}", "import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InfoCard from \"~/components/InfoCard\";\nimport Paper from \"@mui/material/Paper\";\nimport DrugsTable from \"~/components/DrugsTable\";\nimport {\n  type ActionFunction,\n  type LoaderFunction,\n  redirect,\n} from \"@remix-run/node\";\nimport {\n  almostFinished,\n  expiring,\n  getAllDrugs,\n  outOfStock,\n} from \"~/controllers/drugsController\";\nimport SaleComponent from \"~/components/SaleComponent\";\nimport { createTransaction } from \"~/controllers/transactionController\";\nimport type { Product } from \"@prisma/client\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nconst AttendantIndexPage = () => {\n  const data = useLoaderData();\n  const { outofstock, exp, almostfinished } = data;\n\n  return (\n    <Grid container spacing={3}>\n      {/* Chart */}\n      <Grid item xs={12} md={4}>\n        <InfoCard title=\"Expiry Date Notifications\" items={exp.slice(0, 2)} />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <InfoCard\n          title=\"Out of Stock Notifications\"\n          items={outofstock.slice(0, 2)}\n        />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <InfoCard\n          title=\"Almost Finished Notifications\"\n          items={almostfinished.slice(0, 2)}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Paper\n          sx={{\n            p: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: 400,\n          }}\n          elevation={4}\n        >\n          <DrugsTable />\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <SaleComponent />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AttendantIndexPage;\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  //get all drugs to load here\n  const all = await getAllDrugs();\n  const outofstock = await outOfStock();\n  const exp = await expiring();\n  const almostfinished = await almostFinished();\n  return {\n    all: all,\n    outofstock: outofstock,\n    exp: exp,\n    almostfinished: almostfinished,\n  };\n};\n\nexport type loaderItemsType = {\n  all: Product[];\n  outofstock: Product[];\n  exp: Product[];\n  almostfinished: Product[];\n};\n\nexport let action: ActionFunction = async ({ request }) => {\n  const data = await request.formData();\n  const items = data.get(\"items\") as string;\n\n  await createTransaction(JSON.parse(items));\n  return redirect(\"/dashboard/invoice\");\n};\n", "import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Card from \"@mui/material/Card\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport CardContent from \"@mui/material/CardContent\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\n//import { Link } from \"@remix-run/react\";\nimport Alert from \"@mui/material/Alert\";\nimport ItemBox from \"~/components/ItemBox\";\nimport { useStore } from \"~/lib/itemStore\";\nimport { useFetcher } from \"@remix-run/react\";\n\nconst SaleComponent = () => {\n  const [itemCount, setItemCount] = React.useState<string>(\"\");\n  const Items = useStore((state) => state.items);\n  const fetcher = useFetcher();\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Alert severity=\"info\" variant=\"filled\">\n          Toggle the Dropdown to select the number of items to add to sale.This\n          would generate the required fields to capture sale details\n        </Alert>\n        <Card elevation={4} sx={{ mt: 2 }}>\n          <Box display=\"flex\" alignItems=\"center\" sx={{ p: 1 }}>\n            <TextField\n              sx={{ width: \"20%\" }}\n              size=\"small\"\n              InputLabelProps={{ shrink: true }}\n              label=\"Total Items\"\n              type=\"number\"\n              value={itemCount}\n              onChange={(event) => setItemCount(event.target.value)}\n              required\n              variant=\"outlined\"\n            />\n            <Box sx={{ flexGrow: 1 }} />\n          </Box>\n          <Divider />\n\n          <CardContent>\n            <Grid container spacing={2}>\n              {Array.from({ length: parseInt(itemCount) }, (_, index) => (\n                <Grid item xs={12} key={index}>\n                  <ItemBox />\n                </Grid>\n              ))}\n            </Grid>\n          </CardContent>\n          <Divider />\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            sx={{ width: \"100%\", p: 2 }}\n          >\n            <Button\n              size=\"small\"\n              sx={{ width: \"40%\" }}\n              disabled={Items.length ? false : true}\n              variant=\"contained\"\n              onClick={() => {\n                fetcher.submit(\n                  { items: JSON.stringify(Items) },\n                  { method: \"post\" }\n                );\n              }}\n            >\n              {fetcher.state === \"submitting\" ? (\n                <CircularProgress color=\"inherit\" size={20} />\n              ) : (\n                \"Submit Sale\"\n              )}\n            </Button>\n          </Box>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SaleComponent;\n", "import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { useLoaderData } from \"@remix-run/react\";\n//import type { Product } from \"@prisma/client\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useStore } from \"~/lib/itemStore\";\nimport type { loaderItemsType } from \"~/routes/dashboard/\";\n\nconst ItemBox = () => {\n  const [id, setId] = React.useState<string>(\"\");\n  const [price, setPrice] = React.useState<string>(\"\");\n  const [quantity, setQuantity] = React.useState<number>(0);\n  const addItem = useStore((state) => state.addItem);\n  const [added, setAdded] = React.useState<boolean>(false);\n  // const Items = useStore((state) => state.items);\n  const removeItem = useStore((state) => state.removeItem);\n\n  const data = useLoaderData<loaderItemsType>();\n  const { all } = data;\n  //console.log(data.all);\n  return (\n    <Grid container spacing={2} alignItems=\"center\">\n      <Grid item xs={12} sm={12} md={4}>\n        <TextField\n          id=\"outlined-select-drug\"\n          select\n          fullWidth\n          size=\"small\"\n          label=\"Select Drug\"\n          InputLabelProps={{ shrink: true }}\n          value={id}\n          onChange={(event) => {\n            setId(event.target.value);\n            //setPrice(selectedItemPrice?.current?.value?.price)\n          }}\n        >\n          {all.map((option) => (\n            <MenuItem key={option.id} value={option.id}>\n              {option.name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={12} sm={12} md={2}>\n        <TextField\n          fullWidth\n          size=\"small\"\n          label=\"Quantity\"\n          name=\"quantity\"\n          InputLabelProps={{ shrink: true }}\n          value={quantity}\n          onChange={(event) => setQuantity(Number(event.target.value))}\n          required\n          type=\"number\"\n          variant=\"outlined\"\n        />\n      </Grid>\n      <Grid item xs={12} sm={12} md={3}>\n        <TextField\n          size=\"small\"\n          fullWidth\n          label=\"Price\"\n          InputLabelProps={{ shrink: true }}\n          name=\"price\"\n          value={price}\n          onChange={(event) => setPrice(event.target.value)}\n          required\n          type=\"number\"\n          variant=\"outlined\"\n        />\n      </Grid>\n      <Grid item xs={6} sm={3}>\n        {added ? (\n          <Button\n            size=\"small\"\n            sx={{ width: \"50%\" }}\n            color=\"error\"\n            variant=\"contained\"\n            onClick={() => {\n              removeItem(id);\n              setAdded(false);\n            }}\n          >\n            Remove Item\n          </Button>\n        ) : (\n          <Button\n            size=\"small\"\n            sx={{ width: \"50%\" }}\n            variant=\"contained\"\n            onClick={() => {\n              addItem({ productId: id, quantity: quantity, price: price });\n              setAdded(true);\n            }}\n            color=\"primary\"\n          >\n            Add Item\n          </Button>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ItemBox;\n", "import create from 'zustand'\n\n\nexport type Item = {\n    productId: string\n    quantity: number\n    price: string \n}\nexport type storeState = {\n    items: Item[] \n    addItem: (item: Item) => void\n    resetItems: () => void\n    removeItem: (item:string) => void \n}\n\nexport const useStore=  create<storeState>((set, get) => ({\n   \n    items: [],\n    addItem: (item) => set(state => ({ items: [...state.items, item] })),\n    removeItem: (item) => set(state => ({items: [...state.items].filter(el => el.productId!== item)})),\n    resetItems: () => set(state => ({items: []}))\n\n})) ", "import React from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport { ValidatedForm } from \"remix-validated-form\";\nimport Link from \"@mui/material/Link\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { registerValidatior } from \"~/lib/validatorSchema\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { FormInputText } from \"~/components/FormInputText\";\nimport SubmitButton from \"~/components/SubmitButton\";\nimport {\n  type ActionFunction,\n  type LoaderFunction,\n  redirect,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { authenticator } from \"~/lib/auth.server\";\nimport { commitSession, getSession } from \"~/lib/session.server\";\nimport { FormInputDropdown } from \"~/components/FormInputDropdown\";\n\nexport default function Register() {\n  const data = useLoaderData();\n\n  //const isSubmitting = useIsSubmitting(\"signUp\");\n  const roles = [\n    { label: \"Admin\", value: \"ADMIN\" },\n    { label: \"Attendant\", value: \"ATTENDANT\" },\n  ];\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 6 }}>\n      <CssBaseline />\n      <Paper\n        sx={{\n          //marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          backgroundColor: \"white\",\n          padding: 3,\n\n          alignItems: \"center\",\n        }}\n        square\n        elevation={8}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" sx={{ fontWeight: \"bold\" }}>\n          Sign up\n        </Typography>\n        {data?.error ? (\n          <Typography variant=\"body2\" sx={{ fontWeight: \"bold\" }} color=\"error\">\n            {data?.error}\n          </Typography>\n        ) : (\n          <Typography variant=\"caption\" color=\"darkgray\">\n            Welome! Please fill in the required details to register\n          </Typography>\n        )}\n\n        <Box\n          component={ValidatedForm}\n          validator={registerValidatior}\n          defaultValues={{ role: \"ATTENDANT\" }}\n          id=\"register\"\n          method=\"post\"\n          sx={{ mt: 1 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormInputText name=\"name\" label=\"User Name\" />\n            </Grid>\n            <Grid item xs={12}>\n              <FormInputText name=\"email\" label=\"Email Address\" />\n            </Grid>\n            <Grid item xs={12}>\n              <FormInputText name=\"mobile\" label=\"Phone Number\" />\n            </Grid>\n            <Grid item xs={12}>\n              <FormInputText name=\"password\" label=\"Password\" type=\"password\" />\n            </Grid>\n            <Grid item xs={12}>\n              <FormInputText\n                name=\"confirm\"\n                label=\"Password Confirmation\"\n                type=\"password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormInputDropdown\n                name=\"role\"\n                label=\"Select Role\"\n                sx={{ width: \"60%\" }}\n                options={roles}\n              />\n            </Grid>\n          </Grid>\n          <SubmitButton\n            title=\"Register\"\n            formId=\"register\"\n            styles={{ mt: 3, mb: 2 }}\n          />\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Container>\n  );\n}\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  let user = await authenticator.authenticate(\"user\", request, {\n    //successRedirect: \"/dashboard/\",\n    failureRedirect: \"/register\",\n  });\n  // manually get the session\n  let session = await getSession(request.headers.get(\"cookie\"));\n  // and store the user data\n  session.set(authenticator.sessionKey, user);\n\n  // commit the session\n  let headers = new Headers({ \"Set-Cookie\": await commitSession(session) });\n\n  // and do your validation to know where to redirect the user\n  return user.role === \"ATTENDANT\"\n    ? redirect(\"/dashboard\", { headers })\n    : redirect(\"/admindash\", { headers });\n};\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let session = await getSession(request.headers.get(\"cookie\"));\n  let error = session.get(authenticator.sessionErrorKey);\n  return json(\n    { error },\n    {\n      headers: {\n        // only necessary with cookieSessionStorage\n        \"Set-Cookie\": await commitSession(session),\n      },\n    }\n  );\n};\n", "import MenuItem from \"@mui/material/MenuItem\";\nimport React from \"react\";\nimport { useField } from \"remix-validated-form\";\nimport TextField, { type TextFieldProps } from \"@mui/material/TextField\";\n\ntype FormInputProps = TextFieldProps & {\n  options: OptionProps[];\n};\n\ntype OptionProps = {\n  label: string;\n  value: any;\n};\n\nexport const FormInputDropdown = ({\n  name,\n  options,\n  ...props\n}: FormInputProps) => {\n  const { getInputProps, error, defaultValue } = useField(name as string);\n\n  return (\n    <TextField\n      helperText={error ? <span style={{ color: \"red\" }}>{error}</span> : null}\n      size=\"small\"\n      key={defaultValue}\n      select\n      {...getInputProps({ id: name })}\n      {...props}\n      variant=\"outlined\"\n    >\n      {options.map((option: any) => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n", "import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\n//import Alert from \"@mui/material/Alert\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { ValidatedForm } from \"remix-validated-form\";\nimport { FormInputText } from \"~/components/FormInputText\";\nimport { loginValidator } from \"~/lib/validatorSchema\";\nimport SubmitButton from \"~/components/SubmitButton\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport Link from \"@mui/material/Link\";\nimport type { LoaderFunction, ActionFunction } from \"@remix-run/node\";\nimport { redirect, json } from \"@remix-run/node\";\nimport { authenticator } from \"~/lib/auth.server\";\nimport { commitSession, getSession } from \"~/lib/session.server\";\n\n//type dataType = { error: string };\nexport default function Login() {\n  const data = useLoaderData();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 15 }}>\n      <CssBaseline />\n      <Paper\n        sx={{\n          //marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          backgroundColor: \"white\",\n          padding: 3,\n\n          alignItems: \"center\",\n        }}\n        square\n        elevation={8}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" sx={{ fontWeight: \"bold\" }}>\n          Sign in\n        </Typography>\n        {data?.error ? (\n          <Typography variant=\"body2\" sx={{ fontWeight: \"bold\" }} color=\"error\">\n            {data.error.message}\n          </Typography>\n        ) : (\n          <Typography variant=\"caption\" color=\"gray\" gutterBottom={true}>\n            Welome back! Please login to continue\n          </Typography>\n        )}\n\n        <Box\n          component={ValidatedForm}\n          validator={loginValidator}\n          id=\"signIn\"\n          method=\"post\"\n          sx={{ mt: 1 }}\n        >\n          <FormInputText name=\"email\" label=\"Email\" sx={{ mb: 3 }} />\n\n          <FormInputText name=\"password\" type=\"password\" label=\"Password\" />\n          <SubmitButton formId=\"signIn\" title=\"SignIn\" />\n\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Container>\n  );\n}\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  let user = await authenticator.authenticate(\"user\", request, {\n    //successRedirect: \"/dashboard/\",\n    failureRedirect: \"/\",\n  });\n  // manually get the session\n  let session = await getSession(request.headers.get(\"cookie\"));\n  // and store the user data\n  session.set(authenticator.sessionKey, user);\n\n  // commit the session\n  let headers = new Headers({ \"Set-Cookie\": await commitSession(session) });\n\n  // and do your validation to know where to redirect the user\n  return user.role === \"ATTENDANT\"\n    ? redirect(\"/dashboard\", { headers })\n    : redirect(\"/admindash\", { headers });\n};\n\n// in the loader of the login route\nexport let loader: LoaderFunction = async ({ request }) => {\n  await authenticator.isAuthenticated(request, {\n    successRedirect: \"/dashboard\",\n  });\n\n  let session = await getSession(request.headers.get(\"cookie\"));\n  let error = session.get(authenticator.sessionErrorKey);\n  return json(\n    { error },\n    {\n      headers: {\n        // only necessary with cookieSessionStorage\n        \"Set-Cookie\": await commitSession(session),\n      },\n    }\n  );\n};\n", "export default {'version':'a62cf06b','entry':{'module':'/build/entry.client-6T6Q73ZB.js','imports':['/build/_shared/chunk-HNHJNOCK.js','/build/_shared/chunk-5BAT6DOP.js','/build/_shared/chunk-MG3SLEUY.js','/build/_shared/chunk-SD35YMGL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-L6KWHPGB.js','imports':['/build/_shared/chunk-SBGYFM7Z.js','/build/_shared/chunk-OEGMHCLR.js','/build/_shared/chunk-2CXL2GMY.js','/build/_shared/chunk-ANGHGYPO.js','/build/_shared/chunk-XOG4JEAC.js','/build/_shared/chunk-C6GE7L2X.js','/build/_shared/chunk-UEKETB5R.js','/build/_shared/chunk-XTZWT63D.js','/build/_shared/chunk-FBVCPJNT.js','/build/_shared/chunk-UAM2XJTP.js','/build/_shared/chunk-IIO44D5T.js','/build/_shared/chunk-TLI6YRQG.js','/build/_shared/chunk-VHO4HQ77.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/admindash':{'id':'routes/admindash','parentId':'root','path':'admindash','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admindash-VLUPQSRV.js','imports':['/build/_shared/chunk-WI6O767X.js','/build/_shared/chunk-CQB3UYG7.js','/build/_shared/chunk-7RW7F2IB.js','/build/_shared/chunk-AASTWL7U.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admindash/$drugId':{'id':'routes/admindash/$drugId','parentId':'routes/admindash','path':':drugId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admindash/$drugId-DFS2FQX5.js','imports':['/build/_shared/chunk-2NBHXR4N.js','/build/_shared/chunk-A3OQN2YC.js','/build/_shared/chunk-ANGHGYPO.js','/build/_shared/chunk-TLI6YRQG.js','/build/_shared/chunk-VHO4HQ77.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admindash/create':{'id':'routes/admindash/create','parentId':'routes/admindash','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admindash/create-LFGLZBDI.js','imports':['/build/_shared/chunk-N2NLYHQV.js','/build/_shared/chunk-3ULWRQNP.js','/build/_shared/chunk-SBGYFM7Z.js','/build/_shared/chunk-OEGMHCLR.js','/build/_shared/chunk-2CXL2GMY.js','/build/_shared/chunk-A3OQN2YC.js','/build/_shared/chunk-ANGHGYPO.js','/build/_shared/chunk-ALNFJBHI.js','/build/_shared/chunk-XOG4JEAC.js','/build/_shared/chunk-C6GE7L2X.js','/build/_shared/chunk-UEKETB5R.js','/build/_shared/chunk-XTZWT63D.js','/build/_shared/chunk-FBVCPJNT.js','/build/_shared/chunk-UAM2XJTP.js','/build/_shared/chunk-IIO44D5T.js','/build/_shared/chunk-TLI6YRQG.js','/build/_shared/chunk-VHO4HQ77.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admindash/index':{'id':'routes/admindash/index','parentId':'routes/admindash','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admindash/index-7HVUTWHD.js','imports':['/build/_shared/chunk-CAZXHGOF.js','/build/_shared/chunk-ALNFJBHI.js','/build/_shared/chunk-XOG4JEAC.js','/build/_shared/chunk-IIO44D5T.js','/build/_shared/chunk-TLI6YRQG.js','/build/_shared/chunk-VHO4HQ77.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admindash/products':{'id':'routes/admindash/products','parentId':'routes/admindash','path':'products','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admindash/products-4OQVM33L.js','imports':['/build/_shared/chunk-2DQ65CR6.js','/build/_shared/chunk-2NBHXR4N.js','/build/_shared/chunk-3ULWRQNP.js','/build/_shared/chunk-SBGYFM7Z.js','/build/_shared/chunk-OEGMHCLR.js','/build/_shared/chunk-2CXL2GMY.js','/build/_shared/chunk-A3OQN2YC.js','/build/_shared/chunk-ANGHGYPO.js','/build/_shared/chunk-XOG4JEAC.js','/build/_shared/chunk-C6GE7L2X.js','/build/_shared/chunk-UEKETB5R.js','/build/_shared/chunk-XTZWT63D.js','/build/_shared/chunk-FBVCPJNT.js','/build/_shared/chunk-UAM2XJTP.js','/build/_shared/chunk-IIO44D5T.js','/build/_shared/chunk-TLI6YRQG.js','/build/_shared/chunk-VHO4HQ77.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-KAOKPCES.js','imports':['/build/_shared/chunk-WI6O767X.js','/build/_shared/chunk-CQB3UYG7.js','/build/_shared/chunk-7RW7F2IB.js','/build/_shared/chunk-AASTWL7U.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/index':{'id':'routes/dashboard/index','parentId':'routes/dashboard','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/index-BGM5FEYS.js','imports':['/build/_shared/chunk-2DQ65CR6.js','/build/_shared/chunk-2NBHXR4N.js','/build/_shared/chunk-3ULWRQNP.js','/build/_shared/chunk-SBGYFM7Z.js','/build/_shared/chunk-OEGMHCLR.js','/build/_shared/chunk-2CXL2GMY.js','/build/_shared/chunk-A3OQN2YC.js','/build/_shared/chunk-ANGHGYPO.js','/build/_shared/chunk-CAZXHGOF.js','/build/_shared/chunk-XOG4JEAC.js','/build/_shared/chunk-C6GE7L2X.js','/build/_shared/chunk-UEKETB5R.js','/build/_shared/chunk-XTZWT63D.js','/build/_shared/chunk-FBVCPJNT.js','/build/_shared/chunk-UAM2XJTP.js','/build/_shared/chunk-IIO44D5T.js','/build/_shared/chunk-TLI6YRQG.js','/build/_shared/chunk-VHO4HQ77.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/invoice':{'id':'routes/dashboard/invoice','parentId':'routes/dashboard','path':'invoice','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/invoice-2NXGMYJM.js','imports':['/build/_shared/chunk-2NBHXR4N.js','/build/_shared/chunk-OEGMHCLR.js','/build/_shared/chunk-A3OQN2YC.js','/build/_shared/chunk-XTZWT63D.js','/build/_shared/chunk-UAM2XJTP.js','/build/_shared/chunk-VHO4HQ77.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-HXFWFIG2.js','imports':['/build/_shared/chunk-F4FZ4N25.js','/build/_shared/chunk-N2NLYHQV.js','/build/_shared/chunk-ALNFJBHI.js','/build/_shared/chunk-CQB3UYG7.js','/build/_shared/chunk-7RW7F2IB.js','/build/_shared/chunk-AASTWL7U.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/register':{'id':'routes/register','parentId':'root','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/register-UYSIVPAJ.js','imports':['/build/_shared/chunk-F4FZ4N25.js','/build/_shared/chunk-N2NLYHQV.js','/build/_shared/chunk-ALNFJBHI.js','/build/_shared/chunk-CQB3UYG7.js','/build/_shared/chunk-7RW7F2IB.js','/build/_shared/chunk-AASTWL7U.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-A62CF06B.js'};", "\nimport * as entryServer from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/entry.server.tsx\";\nimport * as route0 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/root.tsx\";\nimport * as route1 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash.tsx\";\nimport * as route2 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash/products.tsx\";\nimport * as route3 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash/$drugId.tsx\";\nimport * as route4 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash/create.tsx\";\nimport * as route5 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/admindash/index.tsx\";\nimport * as route6 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/dashboard.tsx\";\nimport * as route7 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/dashboard/invoice.tsx\";\nimport * as route8 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/dashboard/index.tsx\";\nimport * as route9 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/register.tsx\";\nimport * as route10 from \"/home/lukatoni/Repositories/RemixProjects/pharmacyApp/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/admindash\": {\n      id: \"routes/admindash\",\n      parentId: \"root\",\n      path: \"admindash\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/admindash/products\": {\n      id: \"routes/admindash/products\",\n      parentId: \"routes/admindash\",\n      path: \"products\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/admindash/$drugId\": {\n      id: \"routes/admindash/$drugId\",\n      parentId: \"routes/admindash\",\n      path: \":drugId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/admindash/create\": {\n      id: \"routes/admindash/create\",\n      parentId: \"routes/admindash\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/admindash/index\": {\n      id: \"routes/admindash/index\",\n      parentId: \"routes/admindash\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/dashboard/invoice\": {\n      id: \"routes/dashboard/invoice\",\n      parentId: \"routes/dashboard\",\n      path: \"invoice\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/dashboard/index\": {\n      id: \"routes/dashboard/index\",\n      parentId: \"routes/dashboard\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/register\": {\n      id: \"routes/register\",\n      parentId: \"root\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    }\n  };"],
  "mappings": "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",
  "names": []
}
